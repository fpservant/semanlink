<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>net.semanlink</groupId>
	<artifactId>semanlink-parent</artifactId>
	<version>0.7.7</version>
	<packaging>pom</packaging>
	<url>http://www.semanlink.net</url>
	<name>semanlink-parent</name>

	<developers>
		<developer>
			<id>fps</id>
			<name>Fran√ßois-Paul Servant</name>
			<email>fps@semanlink.net</email>
		</developer>
	</developers>

    <modules>
        <module>../semanlink-common</module>
        <module>../semanlink-lod-parent</module>
        <module>../semanlink-java</module>
        <module>../semanlink-webapp</module>
    </modules>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- name of mvn-repo -->
		<temp.stagging.repo>${project.build.directory}/mvn-repo</temp.stagging.repo>

		<!-- github server corresponds to entry in ~/.m2/settings.xml -->
		<github.global.server>github</github.global.server>

		<!-- <semanlink.release.date>2013-09-27</semanlink.release.date> -->
		<maven.build.timestamp.format>yyyy-MM-dd</maven.build.timestamp.format>
		<semanlink.release.date>${maven.build.timestamp}</semanlink.release.date>

 		<version.jena>3.3.0</version.jena>
<!--         <version.jena>3.16.0</version.jena> -->

<!-- 2018-08 trying to reuse jersey
cf https://stackoverflow.com/questions/26436463/getdispatchertype-is-undefined-for-the-type-httpservletrequest
		<version.servlet.api>3.1.0</version.servlet.api>
 -->
        <version.servlet.api>3.1.0</version.servlet.api>
		<version.jsp.api>2.1</version.jsp.api>
		<version.junit>4.13.1</version.junit>
	</properties>

	<dependencies>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${version.servlet.api}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>${version.jsp.api}</version>
			<scope>provided</scope>
		</dependency>

<!-- 		<dependency> -->
<!-- 			<groupId>log4j</groupId> -->
<!-- 			<artifactId>log4j</artifactId> -->
<!-- 			<version>1.2.17</version> -->
<!-- 		</dependency> -->

<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->
<dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-core</artifactId>
    <version>[2.17.0,)</version>
</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${version.junit}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<inherited>true</inherited>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<!-- <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository> -->
					<altDeploymentRepository>internal.repo::default::file://${temp.stagging.repo}</altDeploymentRepository>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<version>0.8</version>
				<configuration>
					<message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
					<noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
					<outputDirectory>${temp.stagging.repo}</outputDirectory> <!-- matches distribution management repository url above -->
					<!-- This isn't perfect, because every old SNAPSHOT is kept.. -->
					<merge>true</merge>
					<branch>refs/heads/mvn-repo</branch>                       <!-- remote branch name -->
					<includes>
						<include>**/*</include>
					</includes>
					<repositoryName>semanlink</repositoryName>      <!-- github repo name -->
					<repositoryOwner>fpservant</repositoryOwner>    <!-- github username -->
				</configuration>


				<executions>
					<!-- run site-maven-plugin's 'site' target as part of the build's normal 
						'deploy' phase -->
					<execution>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>deploy</phase>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<!-- to connect to the jena SNAPSHOTS I got problme to get this working 
		within eclipse (proxy authen failed). But OK from terminal -->
	<repositories>
		<repository>
			<id>apache-repo-snapshots</id>
			<url>https://repository.apache.org/content/repositories/snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<!-- <distributionManagement> <repository> <id>github</id> <name>GitHub 
		Semanlink Repository</name> <url>https://raw.github.com/fpservant/semanlink/mvn-repo</url> 
		</repository> </distributionManagement> -->

	<distributionManagement>
		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			<url>file://${project.build.directory}/mvn-repo</url>
		</repository>
	</distributionManagement>
</project>
