// Scripts used to access to semanlink data from a static HTML page.// This script supposes that a method semanlinkUrl() is defined,// that returns the slash terminated url of the semanlink servlet,// (something such as "http://127.0.0.1:8080/semanlink/")var snipReq;var snipElementId;function liveTreeLoadSubTree() {	return semanlinkUrl() + "loadsubtree.do";}/** * @param shortTag : a short tag (such as "semantic_web") * @param what : one of <ul> * <li>"children"</li> * <li>"parents"</li> * <li>"documents&mode=i" where i = 0, 1, 2 or 3, with following meaning: *     <ul> *         <li> 0: SHOW_CHILDREN_ONLY  (children of tag and documnts marked with tag (but not by a descendant)</li> *         <li> 1: SHOW_ALL_DOCUMENTS (documents tagged with any of tag's descendants) </li> *         <li> 2: SHOW_TREE </li> *         <li> 3: SHOW_EXPANDED_TREE </li> *     </ul> * </li> * @param elemntId : id of DOM element inside which result will be written. */function go(shortTag, what, elementId) {	url = semanlinkUrl() + "tag/" +shortTag+"?snip=" +what;	location.href = url;}/** * If innerHTML of elementId is "", sends the request and set the innerHTML with the response, * else, show/hide the element */function snip(shortTag, what, elementId) {	elem = document.getElementById(elementId);	if (elem.innerHTML == "") {		url = semanlinkUrl() + "tag/" +shortTag+"?snip=" +what;		snipElementId = elementId;		if (window.ActiveXObject) { // IE			isIE = true;			snipReq = new ActiveXObject("Microsoft.XMLHTTP");			if (snipReq) {				snipReq.onreadystatechange = snipProcessStateChange;				snipReq.open("GET", url, true);				snipReq.send();			}		} else if (window.XMLHttpRequest) { // Non-IE browsers			snipReq = new XMLHttpRequest();			snipReq.onreadystatechange = snipProcessStateChange;			try {				snipReq.open("GET", url, true);			} catch (e) {				alert(e);			}			snipReq.send(null);		} else {			alert("no ajax");		}	} else {		with (elem.style) {			if (display=="none") {				display="block";			} else {				display="none";			}		}	}}function snipProcessStateChange() {	if (snipReq.readyState == 4) { // Complete		if (snipReq.status == 200) { // OK response			elem = document.getElementById(snipElementId);			elem.innerHTML = snipReq.responseText;			with (elem.style) {				if (display=="none") {					display="block";				}			}		} else {			alert("Problem: " + snipReq.statusText);		}	}}