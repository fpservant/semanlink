function displayExample() {	//var uri = getMarkdownUri(null);	var uri = "http://127.0.0.1/~fps/fps/2015/09/Coursera%20-%20Synapses,%20Neurons%20and%20Brains/notes.md";	displayMarkdown(uri);}/** display a uri supposed to return markdown text, *  replacing relative links (supposed to be relative to uri) */function displayMarkdown(uri) {	var displayMd = function(mdText) {		var md = window.markdownit({			replaceLink: replaceLinkFct(uri)		});		md.use(window.markdownitReplaceLink);		document.getElementById("md").innerHTML = md.render(mdText);	};	dollarGet(uri, displayMd);}/** * Function used by markdownit ReplaceLink plug in to compute how to replace a link * in md document given by uri */function replaceLinkFct(uri) {	var k = uri.lastIndexOf("/");	var baseslash = uri.substring(0,k+1);	return function (link, env) {		if (link.startsWith("http")) {			return link;		} else if (link.startsWith("/")) {			// this won't work, but I don't know what could be done.			// Make it relative to webserver root? to doc folder?			// Also, we have the case of docs on the disk, such as /USers/fps/adoc			return link;		} else {			return baseslash + link;		}	};}function displayRawMarkdown(uri) {	var displayRawMd = function(mdText) {		document.getElementById("rawmd").value = mdText;	};	dollarGet(uri, displayRawMd);}// in edit mode: display styled and raw markdownfunction displayEditMarkdown(uri) {	var displayBothMd = function(mdText) {		// alert("displayEditMarkdown " + mdText);		document.getElementById("rawmd").value = mdText;		var md = window.markdownit({			replaceLink: replaceLinkFct(uri)		});		md.use(window.markdownitReplaceLink);		document.getElementById("md").innerHTML = md.render(mdText);	};		// pour être sûr qu'on recharge vraiment les données à partir du serveur (?)	// ca a pas l'air de marcher	// safari Failed to load resource: "Request header field Cache-Control" is not allowed by Access-Control-Allow-Headers	// firefox locage d’une requête multiorigines (Cross-Origin Request) : la politique « Same Origin » ne permet pas de consulter la ressource distante située sur http://127.0.0.1/~fps/fps/2017/04/ElasticSearch_Renault.md. Raison : jeton « cache-control » manquant dans l’en-tête CORS « Access-Control-Allow-Headers » du canal de pré-vérification des requêtes CORS.	// dollarGet(uri, displayBothMd, true);	dollarGet(uri, displayBothMd);}///////** http get  * @param forceReload to avoid taking result in cache */ // ca a pas l'air de marcher// function dollarGet(uri, success, forceReload) {function dollarGet(uri, success) {	// alert("dollarGet " + uri);	var xhr = new XMLHttpRequest();	xhr.open('GET', uri);	xhr.onload = function() {		if (xhr.status === 200) {			success(xhr.responseText);    	} else {			alert('Request failed.  Returned status: ' + xhr.status);		}	};//	if (forceReload === true) {//		xhr.setRequestHeader("Cache-Control", "max-age=0");//	}	xhr.send();}function invalidateCache(url) {	var xhr = new XMLHttpRequest();	xhr.open("GET", url, true);	xhr.setRequestHeader("Cache-Control", "max-age=0");	xhr.send();}// ////function Editor(input, preview) {	this.update = function () {		var md = window.markdownit();		var result = md.render(input.value);    		preview.innerHTML = result;	};	input.editor = this;	this.update();};///////** to display sl:comment as markdown */// la jsp met le texte dans la page. Ici, on le reprend comme du markdownfunction displayCommentAsMarkdown() {	var commentDiv = document.getElementById("slcomment");	if (commentDiv) {		var commentAsText = commentDiv.innerHTML;		if (commentAsText.indexOf("<") > -1) {			// probably it's html, don't change			return;		}		// je ne sais pas bien ce qu'il faudrait mettre dans uri pour faire un truc sur les links // TODO à vois, si on veut//		var uri =//		var md = window.markdownit({//			replaceLink: replaceLinkFct(uri)//		});		var md = window.markdownit();		md.use(window.markdownitReplaceLink);		commentDiv.innerHTML = md.render(commentAsText);			}}