<%@ page    contentType="text/html;charset=UTF-8"  pageEncoding="UTF-8" language="java" session="false" import="net.semanlink.util.servlet.*, net.semanlink.lod.iso3166.*, java.net.*"%><style type="text/css"><!--.kod {	font-family: "Courier New", Courier, mono;	font-size: 12px;	background-color: #FFFFCC;	border: thin solid;	margin-right: 80px;	margin-left: 80px;	margin-bottom: 12px;	margin-top: 12px;}.kod p {	margin-top: 2px;	margin-bottom: 2px;}--></style><%/* It seems that we need to encode the query twice if we want it to work when it contains diacritics. So, - if we use windows.location = url, we must call encodeURIComponent twice. - if we use the content of a GET form field, we must encode it once with encodeURIComponent, the  form enconding it once more  sparql as rdf: the servlet calls the SPARQLEndpoint, which decodes once the "query" parameter of the request  sparql as html: the servlet get the "query" param, encode it, and pass it to the html page that loads rdf, where it is written as in in the "onload" on the body tag  But in fact, a single encoding works IF we do not use diacritics (decoding twice something encoding only one is no problem) That is, we can encode only once IF we encode the diacritics - that is, if we write "%C3%A9" instead of "Ã©" in an input field. */String contextURL =  BasicServlet.getContextURL(request);String sparqlURL = contextURL + "/simplelodservlet/sparql/";%><h2>Simple SPARQL Servlet home</h2>