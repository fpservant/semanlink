/* CVS $Id: SLSchema.java,v 1.1 2010/06/25 16:15:22 fps Exp $ */
package net.semanlink.semanlink; 
import org.apache.jena.rdf.model.*;
 
/**
 * Vocabulary definitions from ./WebContent/schema/semanlink-schema.rdf 
 * @author Auto-generated by schemagen on 21 sept. 2009 21:25 
 */
public class SLSchema {
    /** <p>The RDF model that holds the vocabulary terms</p> */
    private static Model m_model = ModelFactory.createDefaultModel();
    
    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://www.semanlink.net/2001/00/semanlink-schema#";
    
    /** <p>The namespace of the vocabulary as a string</p>
     *  @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a resource</p> */
    public static final Resource NAMESPACE = m_model.createResource( NS );
    
    public static final Property comment = m_model.createProperty( "http://www.semanlink.net/2001/00/semanlink-schema#comment" );
    
    public static final Property creationDate = m_model.createProperty( "http://www.semanlink.net/2001/00/semanlink-schema#creationDate" );
    
    /** <p></p> */
    public static final Property creationTime = m_model.createProperty( "http://www.semanlink.net/2001/00/semanlink-schema#creationTime" );
    
    /** <p>Used to state that the subject is the Non-Information Resource (thing or concept) 
     *  described by the object.Utilisée pour indiquer que le sujet est la chose ou 
     *  le concept décrit par l'objet.</p>
     */
    public static final Property describedBy = m_model.createProperty( "http://www.semanlink.net/2001/00/semanlink-schema#describedBy" );
    
    /** <p>The tag object of this statement is an alias of tag subject. Subject is used 
     *  instead of alias when adding alias as object of a property such as hasParent 
     *  or hasTag</p>
     */
    public static final Property hasAlias = m_model.createProperty( "http://www.semanlink.net/2001/00/semanlink-schema#hasAlias" );
    
    // @find SKOSIFY
    // public static final Property hasParent = m_model.createProperty( "http://www.semanlink.net/2001/00/semanlink-schema#hasParent" );
    
    public static final Property prefLabel = m_model.createProperty( "http://www.semanlink.net/2001/00/semanlink-schema#prefLabel" );
    
    // @find SKOSIFY
    // public static final Property related = m_model.createProperty( "http://www.semanlink.net/2001/00/semanlink-schema#related" );
    
    /** <p>Indique que la ressource sujet est remplacée par une autreStates that a resource 
     *  is replaced by another one.</p>
     */
    public static final Property replacedBy = m_model.createProperty( "http://www.semanlink.net/2001/00/semanlink-schema#replacedBy" );
    
    public static final Property tag = m_model.createProperty( "http://www.semanlink.net/2001/00/semanlink-schema#tag" );
    
    public static final Resource Tag = m_model.createResource( "http://www.semanlink.net/2001/00/semanlink-schema#Tag" );
    
    public static final Resource Thesaurus = m_model.createResource( "http://www.semanlink.net/2001/00/semanlink-schema#Thesaurus" );
    
    // public static final Property markdown = m_model.createProperty( "http://www.semanlink.net/2001/00/semanlink-schema#markdown" );
    public static final Property markdownOf = m_model.createProperty( "http://www.semanlink.net/2001/00/semanlink-schema#markdownOf" );
    
    // 2019-03 uris for bookmark
    public static final Property bookmarkOf = m_model.createProperty( "http://www.semanlink.net/2001/00/semanlink-schema#bookmarkOf" );
    // 2019-05 main doc
    public static final Property mainDoc = m_model.createProperty( "http://www.semanlink.net/2001/00/semanlink-schema#mainDoc" );
    // 2020-11 related doc
    public static final Property relatedDoc = m_model.createProperty( "http://www.semanlink.net/2001/00/semanlink-schema#relatedDoc" );
    
}
